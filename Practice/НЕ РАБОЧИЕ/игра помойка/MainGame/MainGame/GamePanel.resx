<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAALwAAAC8CAYAAADCScSrAAAABGdBTUEAALGPC/xhBQAABBFJREFUeF7t
        0jGu3EAMRMF//7P6DraDjoQOCFiDEY0q7ItXHPIHAAAAAAAAAAAAAAAAAAAAAAAA/tnvv79T5S/gO55H
        +mb5C/iO55G+Wf4CvuN5pG+Wv4DveB7pm+Uv4DueR/pm+Qv4jueRvln+Ar7jeaRvlr+A73ge6ZvlL+A7
        nkf6ZvkL+I7nkb5Z/gLOeR7dpjICzD2PaFMZAeaeR7SpjABzzyPaVEaAuecRbSojwNzziDaVEWDueUSb
        yggw9zyiTWUEmHse0aYyAsw9j2hTGQHmnke0qYwAc88j2lRGgLnfv/4ez9IyAsy1Q9pSRoC5dkhbyggw
        1w5pSxkB5tohbSkjwFw7pC1lBJhrh7SljABz7ZC2lBFgrh3SljICzLVD2lJGgLl2SFvKCDDXDmlLGQHm
        2iFtKSPAXDukLWUEmGuHtKWMAHPtkLaUEWCuHdKWMgLMtUPaUkaAuXZIW8oIMNcOaUsZAebaIW0pI8Bc
        O6QtZQSYa4e0pYwAc+2QtpQRYK4d0pYyAsy1Q9pSRoC5dkhbyggw1w5pSxkB5tohbSkjwFw7pC1lBJhr
        h7SljABz7ZC2lBFgrh3SljICzLVD2lJGgLl2SFvKCDDXDmlLGQHm2iFtKSPAXDukLWUEmGuHtKWMAHPt
        kLaUEWCuHdKWMgLMtUPaUkaAuXZIW8oIMNcOaUsZAebaIW0pI8BcO6QtZQSYa4e0pYzA/6YtW2fL03ND
        W4jOlqfnhrYQnS1Pzw1tITpbnp4b2kJ0tjw9N7SF6Gx5em5oC9HZ8vTc0Bais+XpuaEtRGfL03NDW4jO
        lqfnhrYQnS1PzxvaA2t3WS1NezDtLqulaQ+m3WW1NO3BtLuslqY9mHaX1dK0B9Puslqa9mDaXVZL0x5M
        u8tqadqDaXdZLU17MO0uq6VpD6bdZbU07cG0u6yWpj2YdpfV0rQH0+6yWpr2YNpdVkvTHky7y2pp2oNp
        d1ktTXsw7S6rpWkPpt1ltTTtwbS7rJamPZh2l9XStAfT7rJamvZg2l1WS9MeTLvLamnag2l3WS1NezDt
        LqulaQ+m3WW1NO3BtLuslqY9mHaX1dK0B9Puslqa9mDaXVZL0x5Mu8tqadqDaXdZLU17MO0uq6VpD6bd
        ZbW8oT3wrfJJR7T/u1U+iRvaQm6VTzqi/d+t8knc0BZyq3zSEe3/bpVP4oa2kFvlk45o/3erfBI3tIXc
        Kp90RPu/W+WTuKEt5Fb5pCPa/90qn8QNbSG3yicd0f7vVvkkbmgLuVU+6Yj2f7fKJ3FDW8it8klHtP+7
        VT6JG9pCbpVPOqL9363ySdzQFnKrfNIR7f9ulU/ihraQW+WTjmj/d6t8EgAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAD8v35+/gAaaViSCNSIgAAAAABJRU5ErkJggg==
</value>
  </data>
</root>