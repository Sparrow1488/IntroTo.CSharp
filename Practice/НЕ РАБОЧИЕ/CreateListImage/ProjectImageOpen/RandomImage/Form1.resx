<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACi
        DwAAAk1TRnQBSQFMAgEBBgEAAQgBAAEIAQABEAEAARABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABQAMAASADAAEBAQABCAYAAQgYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/wEAAQsCIgEVAkoB6wHx
        AfACuwEJAfAB8QG8AbsERAEjAUQBEwREAkoCRAERIAADIgEUARMCSgHyAvQB8gEJArsBCQG8BkQBFAFE
        AQ8BEAEPA0QBEQEOIAABRAEjAUQBFQEUAkQF9AHyAQkCuwJKBEQBFAFEAhEBQwERAQ8BIgERAQ8gAANE
        ARUBRAFLAUQBvAL0AfICvALwAQkCSwJKAkQBFQFEARABEQFEAkMBIgFDARAgAAJKAUQBDgEPAm4B7wHy
        AfACCQS7AksDSgJEAREBEAEPAREBQwEVA0QgAAJKAkQBFQFKAW4BBwHxAgkFuwRLAUoBRAESAhEBDwEV
        AUQBFQFDAkQgAAFKBEQCbgG8AwkFuwVLAUQBEgEVAUMBDwFDAUoERCAAAW4BQwEPAQ4BEQFDAUsB7wMJ
        BbsFSwFEARMBFQFDAREBFQFKARQDRCAAAUoBRAEOAREBbgFLAUQBSwQJA7sBtQVLAUQBEgIVARECSgEU
        A0QgAAFEARMBAAEOAW4CRAFLAbwDCQO7AbUESwFKAUQBEgFEARUBQwFLAUoBFANEIAABSgFEARABFQFu
        AiMBRAH3AwkCuwK1AW4DSwFKAUQB6gFKAUQBFAFKAUQBEwNEIAABbgEiAUQBbgFEASIDRAG7AQkCuwO1
        AfcB7QHsAfgC6wFtAeoBEwEVAUoBRAESA0QgAAHsASICIwVEAfcCuwO1AbQB7wEHAbUCuwHvAesB7QHs
        ARQCSgHqAkQBSiAAAesDRAFtAfgCuwG1ArsCtQO0Ae8BuwG1ArsBBwGuAfcB7AEUAUoBbgFtAkQBSiAA
        AW0CRAHtBrsCtQS0Ae8CtQG7AgkB7wG1AfcB6gH3Ae0B6wEUAUQBSiAAAW0BIwHqAbQGtQa0Ae8BtQG7
        AwkB8AEZAe8BkgEJAfcB6wEVAfgB9yQAAQ4BEAEOARECDwEQAQ8EAAERAUMDRAEVAkMCFQFKAesBHAH4
        AZkB6wFtAesBkgHsAeoBEgHrAW0B+APsAu0B6wFtAfMBvAIHAf8B8wLwAfEB8AHvArwB8gG8Af8FAAEO
        AREBDwEQAQ8BDgUAAUQBSgFLAkoFEQEVARwBmQEcAZkBcwHrAe0C9wHtAfgBbQLrAfgC7AHtA5IC8AH3
        AZIC8wEHAe8B8QHvBQcB/wEABQ4BEAEPAhAFDgEAAkoBRAFKARUEEQFDARMB6wKZAhwC9wPvAesBbQEU
        ARMBbAHqAW0B7QP3AxQBEgPtAhwBkwGZAe4EGgEAARQBEwEVAxEBEANDBBEBAAEUAWwBdAFzAUoBEQFD
        ARUBEQFDARMBbQGZAXkBcwF0AewD7wH3AewBiwETAosBbQHsAvcB7wH3AhABEQFtBm4BcwEcApkBGgGZ
        AQABEwIUAUMCEQJDARUBQwERARABEQFDAQABEwFsAW0BFAJKARIBbQFKARUBFAFtAZkBoAHDAZkBEwHq
        Ae0BkgHrArQDiwFtAe0BkgP3AUMBEQFDBG4BbQHqAW0BbgFzAZMDmQEAARMCFQEUARIBEwIVARQBFQIU
        AUMBFAEAAUMCFAFsARQBFQETAWwBSgEVAhIBGgH2AcMB9gFDARUBEwHtAewBtAFsAW0BEgHqARUB6gHs
        A/cBQwERAUMGbgFtAeoBbgGTA5kBAAHqBBMEFAETAhIBFAESAQACFQEUAWwBFQEUAmYBEgEVARMBbQEc
        AfYBwwH2AxUBFAESAZEBbAEUARUBbQEVARMBbQGSAu8BEQFDARUBbQHqAhICRAISAeoBbgKTARwBAAET
        ARQCFQEUAesBFAESAeoBFAEVAhEBEwEAARQBFQFDARQBFQETAWYBiwHqAhMBbQHrAfQB9gHDA0oCFAFt
        AYsB6gEUAesBQwESAewD7wERAUMBFQFtAeoCbgFoBW4CHAFuAQABFQFDAREBEAEVAW0BEAFDARUCFAEV
        AREBFQEAARUCQwESARUB6gESAeoBbQEVARMBbQHrARwB9QHDAhUBSQNKAnIB6wFKAUQBbQHtAe8CBwIR
        AUMB7AHtARwEbgEcAW4BbQJuARUBAAEUBEQBSwFEAhQCEgEVARMBEgEAARQCQwFtARQBEgEUARUB6gEU
        AW0DcwHwAfYBSgJtAeoBEgFtAesCcwFSAUsBbgHsAfcCBwMRARIB7AHtAW4BbwFuARwBbgESAW4BRAES
        AeoBAAEUAUQBFQETARICRQFEARUBEwESARQCEgEAARIBFQFEAUoBFAFyAxQBEwFtAfgC6wHsAfQC9wGS
        Ae0B7AHrAeoB6wFuAW8BeQJzAe0B9wHvAxEBRAJuARwCkwFtAUMBRAFDAhIB6gEAAm0CFAJDARMBRAFD
        AhIBEwFsAeoBAAHqARQBSwFtARIBbQESARUBFAFzAXIBcwFtAfgB6wHvAfcC7wH3Au8B9wHtAewBbgEc
        AesBbQH3Ae0B7AERARABQwFEAUMBbgVEA+oBRAHqAQABkQLqAW0BFAERARQBbQLqAhIBFQETAQAB7AEU
        AUoBEgEUAm0BEwHqARwB+AFzAhwCcwESAesBbQH4Au0B7wH3AewB6wHtAvcBBwLvAhABEQEVAW0DRAJD
        AkQB6gESAUQB6gEAApEB6wH4AeoBFAETARIB6wFtAeoBEwESARMBAAHrARIBSgHqARQBbQH4ARIBbQFz
        AewB9wEbAQgBmQEcAREBEwESAeoB7wEHAbwBkgHqAW0B7wHxAewB6wFtAewBEQEQAREBQwFEAREBQwFE
        AkMGRAEABJEB+ALrAZEDbQESAW0BEgEAAW0BFAFKAXMBbAHrAe0B6gFtAe0BCAH1AfQB8gHxARsBFQIU
        AesBGwH2Ae8B6gJtAQcB8wLrAfcBrgERASIBEAURA0MFRAEAAhQBFQMUARUCFAEVAUMDEQEAAfgBEgFy
        ARwB+AIHAeoB+AG7AQkB8wHwAxsBEQFDARMB7QEbAfQB7wHrAfcB7wEHAfIBBwHwAfIB8QERAQsCEAcR
        AUMERAFCAU0BPgcAAT4DAAEoAwABQAMAASADAAEBAQABAQYAAQEWAAP//wACAAs=
</value>
  </data>
</root>